# -*- mode: sh;-*-

## This file contains settings local to the system.  Note that this is
## read very early, so you can not depend on anything that is set
## somewhere in this zsh config. If you want that, use the file
## ${ZDOTDIR}/zshlate or $ZDOTDIR/zlogin.
## zlogin is read whenever the shell is a login shell, zshlate is
## used on all interactive shells.

## The contents here consist of a mix of variables and zstyle lines.
## Feel free to add your own at the bottom.

## Output some more information during zshell startup
DEBUG=${DEBUG:-no}

## The following entries are added to the PATH variable, in front of
## anything else. Non-existing directories are ignored, so you can
## list more than the current machine has.
## If you don't want any additions, make it an empty array
typeset -a lpath
lpath=(
    "$HOME/bin"
    /sbin
    /usr/sbin
    /srv/qa.debian.org/mia
)

## Same goes for man and info path
typeset -a lmanpath
lmanpath=(
    ~/man
    ~/local/share/man
)

########################################################################
## The following styles are defined.                                  ##
## Values shown are the defaults taken if the style is unset          ##
########################################################################

## Set a sane umask
# zstyle ':ganneff:config' umask '022'

## check every 5 min for login/logout activity
# zstyle ':ganneff:config' LOGCHECK 300

## The format of login/logout reports
# zstyle ':ganneff:config' WATCHFMT '%n %a %l from %m at %t.'

## Do you want to have zsh compile your startup files?
## It may make it faster. It may make it slower. Check yourself.
## This uses zrecompile, so changed files are automagically detected
# zstyle ':ganneff:config' zrecompile false

## The two variables COLORS and LINEDRAW, by default, are set according
## to the capabilities of your terminal. COLORS if it supports colors
## (tput colors > 0), ## LINEDRAW, who would have thought, if it can
## draw "nice-looking" lines (tput acsc exists and NOT linux console).
## If you want to overwrite that detection, enable the following styles.
# zstyle ':ganneff:config' COLORS false
# zstyle ':ganneff:config' LINEDRAW true/false

## Store the dirstack between sessions and restore it
## There are two ways: The first, dirpersist, will restore it in
## a way that  puts your new shell into the directory you quit your
## last. The other way, dirstack, will restore the stack, but not
## change the directory your shell starts in (so usually it will be ~).
## Value is dirpersist or dirstack
zstyle ':ganneff:config' dirstackhandling dirpersist

## Maximum number of events stored in the history file
## HISTSIZE is set to 1.10 times the size of this, to have the
## difference as a cushion for saving duplicated history events, so dupe
## expiration can happen without killing (old) unique entries
# zstyle ':ganneff:config' SAVEHIST 50000

## The preferred pager
# zstyle ':ganneff:config' PAGER "$(which less)"

## some options for less
# zstyle ':ganneff:config' LESS '-X -R -f -j 3'

## use solarized colorscheme for ls?
# zstyle ':ganneff:config' solarizedls true

## on very wide displays it is annoying to have too wide manpages.
## set to 0 if you want them really wide
# zstyle ':ganneff:config' MANWIDTH 80

## The format of process time reports with the time builtin.
# zstyle ':ganneff:config' TIMEFMT "%J  %U user %S system %P cpu %*E total | Mem: %M kb max"

## Report time statistics if command runs longer than 30 seconds
## (combined user/system execution times)
# zstyle ':ganneff:config' REPORTTIME 30

## Preferred list of locales to set. The first found is taken, you
## should end with C in case there is no locale configured.
#zstyle ':ganneff:config' locales "LANG de_DE.utf8 en_GB.utf8 C.UTF-8 C" \
#    "LC_MESSAGES en_GB.utf8 de_DE.utf8 C.UTF-8 C"

## Use zsh syntax hilighting (input line coloring)
# zstyle ':ganneff:config' zsh-syntax-hilight true

## Preferred list of editors to use as $EDITOR.
## If you want arguments to the command, give them inside ""
# zstyle ':ganneff:config' editors "emacs-snapshot -Q -D -nw" \
#     "emacs24 -Q -D -nw" \
#     "emacs23 -Q -D -nw" \
#     "emacs22 -Q -D -nw" \
#     mcedit \
#     vim vi \
#     editor

## Want to (try) using emacsclient?
# zstyle ':ganneff:config' emacsclient true

## Want to have a fortune at zsh start?
# zstyle ':ganneff:config' fortune true

## Want to see how long it (roughly) took to load?
# zstyle ':ganneff:config' starttime false

## Should we use lessfile or lesspipe (if installed)?
## Difference is in the handling, see the manpages for details, but
## one of them uses pipes and one files to hand their output to less.
## Which results in one of them having you waiting until they are finished,
## while the other shows you results fast - but then doesn't let less show
## you how far (in %) you are in the output.
## Defaults to lesspipe
# zstyle ':ganneff:config' lesstool lesspipe

# We have a little function "path". Call that and it displays your path
# variable nicely colored. Call it with argument (say, fpath) and it does
# it for that path. Define the colors and elements to style in this array
# (or live with defaults).
# Actually it can be used for any array, just set the pcolor style with the
# right matches and the color for it...
# zstyle ':ganneff:config' pcolor /usr green \
#     /bin   blue     \
#     /opt   cyan     \
#     /sbin  magenta  \
#     /local yellow   \
#     /zsh   white

## Want to see status of screen/tmux? Will list their sessions, if
## any (and if they are installed)
# zstyle ':ganneff:config' termstatus true

## Easy way to setup ssh agent. Usually ssh-agent (or gpg-agent) should
## be setup outside zsh, like at X login time, and just serve your
## terminals with their zshs inside.
## But there are situations one does not have that environment around
## (say, login to a remote machine) and still want an agent.
##
## Should we setup the agent automagically on every zsh startup?
## If false then we only setup the agent/kill_agent functions to be
## there.
## If true we also execute the agent function and may load the keys.
# zstyle ':ganneff:config' doagent false

## Which ssh keys to add to the agent? Empty if not given, then you can
## manually do the ssh-add runs. Otherwise a list with path entries.
# zstyle ':ganneff:config' agentfiles

## Should we kill the agent at zsh exit?
# zstyle ':ganneff:config' killagent true

## Use ssh-agent or gpg-agent?
# zstyle ':ganneff:config' agent gpg-agent

########################################################################
### Prompt setup                                                     ###
## use vcs_info in prompt
# zstyle ':prompt:ganneff' vcs_info true

## use defaults set by me?
# zstyle ':prompt:ganneff' set_vcs_info_defaults true

## if set_vcs_info_defaults is false, you may want to enable some of the
## following lines or whichever combination you like of it. See the
## vcs_info documentation for what they mean.
# zstyle ':vcs_info:*' max-exports 1
# zstyle ':vcs_info:*' use-prompt-escapes
# zstyle ':vcs_info:*' use_simple
# zstyle ':vcs_info:*' stagedstr      "!"
# zstyle ':vcs_info:*' unstagedstr    "?"
# zstyle ':vcs_info:*' check-for-changes true

## change vcs_info formats for the prompt
# zstyle ':vcs_info:(sv[nk]|bzr):*' branchformat "${PR_YELLOW}%b%{${PR_RED}%}:${PR_YELLOW}%r${PR_NO_COLOR}"
# zstyle ':vcs_info:*' formats "(${PR_YELLOW}%s${PR_NO_COLOR})-[${PR_GREEN}%b${PR_NO_COLOR}]%m%u%c "
# zstyle ':vcs_info:*' actionformats "(${PR_YELLOW}%s${PR_NO_COLOR})-[${PR_GREEN}%b${PR_NO_COLOR}-${PR_RED}(%a)${PR_NO_COLOR}]%m%u%c "
# zstyle ':vcs_info:*' disable cdv darcs mtn tla hg fossil p4

## Similar to the zbell function included, this lets the prompt do it.
## That way one can not forget to activate it. But as one might not want
## it each and every time when a command runs a little longer, the
## timeout here should be really high. I recommend something like 300 or
## 600. Set it to 0 to turn this feature off entirely, default is 600
# zstyle ':prompt:ganneff' longbell 600

## The following list of commands is ignored, no bell is output if it
## runs too long. $EDITOR, $PAGER, man and maybe ssh might be good
## candidates and as such are the default.  If you put variables here,
## we will additionally expand them at prompt setup time and so keep
## both, the variable itself as well as the expanded command ignored.
# zstyle ':prompt:ganneff' bell_ignore '$EDITOR' '$PAGER' sleep man ssh zsh watch

## Use color in prompt.
## COLORS is defined as true/false in 01_Terminfo.zsh depending on
## capabilities of the terminal. If unset then defined by those.
# zstyle ':prompt:ganneff' colors true/false

## If drawing lines, make them "nice looking".
## LINEDRAW is defined as true/false in 01_Terminfo.zsh depending on
## capabilities of the terminal. If unset then defined by those.
#zstyle ':prompt:ganneff' nicelines true/false

## Populate prompt info item "battery"
## If `none' then no battery function at all.
## If either `ibam' or `acpi' then use those tools to gather
## the current battery level.
# zstyle ':prompt:ganneff' battery none

## If true (default), use a right side prompt
#zstyle ':prompt:ganneff:right:setup' use-rprompt true

## Define list of items for the prompt. See prompt -h ganneff
## for more information.
# zstyle ':prompt:ganneff:left:full:setup' items \
#     ulcorner line openparentheses user at host colon pts closeparentheses line history \
#     line shell-level line flexline openparentheses path closeparentheses line urcorner newline \
#     llcorner line rc openparentheses time closeparentheses line vcs line change-root pipe space
# zstyle ':prompt:ganneff:right:full:setup' items \
#     pipe line openparentheses date closeparentheses line lrcorner
# zstyle ':prompt:ganneff:left:small:setup' items \
#     ulcorner line openparentheses user at host closeparentheses line openparentheses path closeparentheses newline \
#     llcorner line rc openparentheses time closeparentheses line vcs line pipe space

## Override the token of an item, here set the date one to also show day of year and week of year
zstyle ':prompt:ganneff:*:items:date' token '%D{%Y-%m-%d [d:%j/w:%V]}'

# Example of an extra defined item.
# zstyle ':prompt:ganneff:extra:ganneff' pre '${PR_RED}'
# zstyle ':prompt:ganneff:extra:ganneff' post '${PR_NO_COLOR}'
# zstyle ':prompt:ganneff:extra:ganneff' token '$BLABLA'
# zstyle ':prompt:ganneff:extra:ganneff' precmd jj_blabla
